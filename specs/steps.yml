stanalysiscode:
  process:
    process_type: 'interpolated-script-cmd'
    script: |
      source /recast_auth/getkrb.sh
      source /home/atlas/release_setup.sh
      source /usr/WorkDir/1.0.0/InstallArea/*/setup.sh
      export USER=othrif
      runVBF.py -f root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/phys-exotics/jdm/vbfinv/RECAST/input/DAOD_EXOT5/mc16_13TeV.346600.PowhegPy8EG_NNPDF30_AZNLOCTEQ6L1_VBFH125_ZZ4nu_MET75.deriv.DAOD_EXOT5.e7613_s3126_r9364_p3895/DAOD_EXOT5.18795494._000010.pool.root.1 -n100
      # Reformat the output such that it can be used by STPostProcessing
      mkdir -p {outputdir_minintuple}
      mv submitDir/data-MiniNtuple/* {outputdir_minintuple}/VBFHAltSignal-MiniNtuple.root
      echo "outputdir_minintuple: " {outputdir_minintuple}
      echo "List content of directory:"
      ls -lR {outputdir_minintuple}
  publisher:
    publisher_type: 'interpolated-pub'
    publish:
      outputfile: 'input_files/user.othrif.vXX.999999.VBFHAltSignal.root/VBFHAltSignal-MiniNtuple.root/VBFHAltSignal-MiniNtuple.root'
      MiniNtuple: '{outputdir_minintuple}'
  environment:
    environment_type: 'docker-encapsulated'
    image: gitlab-registry.cern.ch/vbfinv/stanalysiscode
    imagetag: latest
    resources:
    - KRB5Auth
    - GRIDProxy

stpostprocessing:
  process:
    process_type: 'interpolated-script-cmd'
    script: |
      source /recast_auth/getkrb.sh
      source /home/atlas/release_setup.sh
      source /analysis/build/*/setup.sh
      export DISPLAY=localhost:0.0
      echo "{input_directory}" > list
      echo "path in list: <<<<"
      cat list
      echo ">>>>>"
      echo "Running getN.py <<<< "
      python /analysis/src/VBFAnalysis/util/getN.py -l list -o fout.root
      echo ">>>>>"
      echo "Running VBFAnalysisAlgJobOptions.py <<<< "
      athena VBFAnalysis/VBFAnalysisAlgJobOptions.py --filesInput {input_directory}/VBFHAltSignal-MiniNtuple.root - --currentVariation Nominal - --normFile fout.root
      echo ">>>>>"
      echo "make output files <<<< "
      mkdir -p output_files
      hadd output_files/VBFHAltSignal-MicroNtuple.root  VBFHAltSignal*.root
      echo ">>>>>"
      echo "make histfitter files <<<< "
      mkdir -p {outputdir_HF}
      #cd {outputdir_HF}
      #echo ">>>>>"
      echo "Running HFInputJobOptions.py <<<< "
      athena VBFAnalysis/HFInputJobOptions.py --filesInput output_files/VBFHAltSignal-MicroNtuple.root - --currentVariation Nominal --Binning 11 --extraVars 7
      echo ">>>>>"
      echo "hadding histfitter file <<<< "
      hadd {outputfile_HF} HFVBFHAltSignalNominal*root
      rm -f HFVBFHAltSignalNominal*_*root
      mv {outputfile_HF} {outputdir_HF}/.
      echo ">>>>>"
  publisher:
    publisher_type: 'interpolated-pub'
    publish:
      HFsignal: '{outputdir_HF}/{outputfile_HF}'
      HFoutput: '{outputdir_HF}'
  environment:
    environment_type: 'docker-encapsulated'
    image: gitlab-registry.cern.ch/vbfinv/stpostprocessing
    imagetag: master
    resources:
    - KRB5Auth
    - GRIDProxy

#limitsetting:
#  process:
#    process_type: 'interpolated-script-cmd'
#    script: |
#      source /recast_auth/getkrb.sh
#      source /home/atlas/release_setup.sh
#      echo "Time for the limit calculation"
#      ls -l
#      set +e
#      export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
#      env
#      ls -al /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/user/atlasLocalSetup.sh
#      source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/user/atlasLocalSetup.sh
#      lsetup 'root 6.08.06-x86_64-slc6-gcc62-opt'
#      mkdir {BUILD_DIR}
#      cd makeHistFitterConfig
#      source setupTest.sh
#  publisher:
#    publisher_type: 'interpolated-pub'
#    publish:
#      limit_file: '{log_limit_HF}'
#  environment:
#    environment_type: 'docker-encapsulated'
#    image: gitlab-registry.cern.ch/vbfinv/statstools
#    imagetag: master
#    resources:
#    - KRB5Auth
#    - GRIDProxy

