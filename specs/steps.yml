stanalysiscode:
  process:
    process_type: 'interpolated-script-cmd'
    script: |
      source /recast_auth/getkrb.sh
      source /home/atlas/release_setup.sh
      source /usr/WorkDir/1.0.0/InstallArea/*/setup.sh
      export USER=othrif
      runVBF.py -f {inputfile} -s {submitDir}
      ls -lR
      # Reformat the output such that it can be used by STPostProcessing
      mkdir -p {outputdir_minintuple}
      mv {submitDir}/data-MiniNtuple/* {outputdir_minintuple}/VBFHAltSignal-MiniNtuple.root
      echo "outputdir_minintuple: " {outputdir_minintuple}
      echo "List content of directory:"
      ls -lR {outputdir_minintuple}
      ls -lR {submitDir}
  publisher:
    publisher_type: 'interpolated-pub'
    publish:
#      outputfile: 'input_files/user.othrif.vXX.999999.VBFHAltSignal.root/VBFHAltSignal-MiniNtuple.root/VBFHAltSignal-MiniNtuple.root'
      MiniNtuple: '{outputdir_minintuple}'
  environment:
    environment_type: 'docker-encapsulated'
    image: gitlab-registry.cern.ch/vbfinv/stanalysiscode
    imagetag: latest
    resources:
    - KRB5Auth
    - GRIDProxy

stpostprocessing:
  process:
    process_type: 'interpolated-script-cmd'
    script: |
      source /recast_auth/getkrb.sh
      source /home/atlas/release_setup.sh
      source /analysis/build/*/setup.sh
      export DISPLAY=localhost:0.0
      echo "{input_directory}" > list
      echo "path in list: <<<<"
      cat list
      echo ">>>>>"
      echo "Running getN.py <<<< "
      python /analysis/src/VBFAnalysis/util/getN.py -l list -o fout.root
      echo ">>>>>"
      echo "Running VBFAnalysisAlgJobOptions.py <<<< "
      athena VBFAnalysis/VBFAnalysisAlgJobOptions.py --filesInput {input_directory}/VBFHAltSignal-MiniNtuple.root - --currentVariation Nominal - --normFile fout.root
      echo ">>>>>"
      echo "make output files <<<< "
      mkdir -p {outputdir_MicroNtuple}
      hadd {outputdir_MicroNtuple}/{outputfile_MicroNtuple}  VBFHAltSignal*.root
      echo ">>>>>"
      echo "make histfitter files <<<< "
      mkdir -p {outputdir_HF}
      echo "Running HFInputJobOptions.py <<<< "
      athena VBFAnalysis/HFInputJobOptions.py --filesInput {outputdir_MicroNtuple}/{outputfile_MicroNtuple} - --currentVariation Nominal --Binning 11 --extraVars 7
      echo ">>>>>"
      echo "hadding histfitter file <<<< "
      hadd {outputdir_HF}/{outputfile_HF} HFVBFHAltSignalNominal*root
      rm -f HFVBFHAltSignalNominal*_*root
      echo "Listing "
      ls -ltR
      echo ">>>>>"
  publisher:
    publisher_type: 'interpolated-pub'
    publish:
      MicroNtuple: {outputdir_MicroNtuple}
      HFoutput: '{outputdir_HF}'
      HFoutputfile: '{outputfile_HF}'
  environment:
    environment_type: 'docker-encapsulated'
    image: gitlab-registry.cern.ch/vbfinv/stpostprocessing
    imagetag: master
    resources:
    - KRB5Auth
    - GRIDProxy

limitsetting:
  process:
    process_type: 'interpolated-script-cmd'
    interpreter: bash
    script: |
      echo "Starting limit setting ..."
      source /recast_auth/getkrb.sh
      echo ""
      source /home/atlas/release_setup.sh
      cd /StatsCode/makeHistFitterConfig
      echo "Cloning the HistFitter repository"
      cp -rf HistFitterTutorialTmp HistFitterTutorial
      echo "moving HistFitterTutorial..."
      cd HistFitterTutorial
      source setup.sh
      cd src
      printf "\n\n==============================\n\n"
      echo "About to compile HistFitter"
      make clean && make
      cd ../..
      printf "\n\n==============================\n\n"
      echo "Launching the stat only limit...this will take a little while..."
      hadd exampleFile/HF_jan7_mc16all_nom_VBFHAltSignal.root exampleFile/HF_jan7_mc16all_nom.root {input_directory}/{input_file}
      mkdir -p {log_limit_HF}
      source runStatOnlyBlindedDocker.sh exampleFile/HF_jan7_mc16all_nom_VBFHAltSignal.root HF_jan7_mc16all_nom sys 0.001 VBFHAltSignal &> {log_limit_HF}/limit.log
      printf "\n\n==============================\n\n"
      tail -30 {log_limit_HF}/limit.log
      cat {log_limit_HF}/limit.log | grep "Correct bands" -A7 -B1 > {log_limit_HF}/Bhinv_bands.log
  publisher:
    publisher_type: 'interpolated-pub'
    publish:
      limit_files: '{log_limit_HF}'
      limit_band: '{log_limit_HF}/Bhinv_bands.log'
  environment:
    environment_type: 'docker-encapsulated'
    image: gitlab-registry.cern.ch/vbfinv/statstools
    imagetag: recast3-4b143c38
    resources:
    - KRB5Auth
    - GRIDProxy

